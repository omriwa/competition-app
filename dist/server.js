!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=7)}([function(e,t){e.exports=require("express")},function(e,t,r){"use strict";r.r(t);var n=r(0);const o=r.n(n).a.Router();o.use((e,t,r)=>{r()}),o.get("/",(e,t)=>{t.send("competitor")}).get("/register",(e,t)=>{t.send("register")}).get("/login",(e,t)=>{t.send("login")}),t.default=o},function(e,t,r){"use strict";r.r(t);var n=r(0);const o=r.n(n).a.Router();o.use((e,t,r)=>{r()}),o.get("/",(e,t)=>{t.send("trainer")}).get("/register",(e,t)=>{t.send("trainer register")}).get("/login",(e,t)=>{t.send("trainer login")}),t.default=o},function(e,t,r){"use strict";r.r(t),t.default=((e,t,r)=>{t.status(404),t.send("404 Not Found")})},function(e,t,r){"use strict";t.__esModule=!0;var n=r(2),o=r(1);t.default={trainerRouter:n.default,competitorRouter:o.default}},function(e,t){e.exports=require("mongoose")},function(e,t,r){"use strict";t.__esModule=!0;var n=r(3);t.default={pageNotFoundMiddleware:n.default}},function(e,t,r){r(1),r(8),r(2),r(9),r(3),e.exports=r(10)},function(e,t,r){"use strict";r.r(t);var n=r(2),o=r(1);t.default={trainerRouter:n.default,competitorRouter:o.default}},function(e,t,r){"use strict";r.r(t);var n=r(3);t.default={pageNotFoundMiddleware:n.default}},function(e,t,r){"use strict";r.r(t),function(e){var t=r(0),n=r.n(t),o=r(4),u=r.n(o),i=r(5),c=r.n(i),s=(r(12),r(6)),l=r.n(s);console.log("routes",u.a);const a=n()();console.log("start server configuration\n"),a.get("/",(e,t)=>{t.send("bbbbbbbbbb")}),a.use("/competitor",u.a.competitorRouter),a.use("/trainer",u.a.trainerRouter),a.use(l.a.pageNotFoundMiddleware),a.listen(8080,e=>{console.log("start server listening\n"),e?console.log("server listen error:",e):console.log("server is up")}),console.log("connect to db\n");let f="mongodb://"+e.env.IP;c.a.connect(f).then(()=>{console.log("db is connected")}).catch(e=>{console.log("server connect to db errorw:",e)})}.call(this,r(11))},function(e,t){var r,n,o=e.exports={};function u(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function c(e){if(r===setTimeout)return setTimeout(e,0);if((r===u||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:u}catch(e){r=u}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var s,l=[],a=!1,f=-1;function d(){a&&s&&(a=!1,s.length?l=s.concat(l):f=-1,l.length&&p())}function p(){if(!a){var e=c(d);a=!0;for(var t=l.length;t;){for(s=l,l=[];++f<t;)s&&s[f].run();f=-1,t=l.length}s=null,a=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function g(e,t){this.fun=e,this.array=t}function b(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];l.push(new g(e,t)),1!==l.length||a||c(p)},g.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=b,o.addListener=b,o.once=b,o.off=b,o.removeListener=b,o.removeAllListeners=b,o.emit=b,o.prependListener=b,o.prependOnceListener=b,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t){e.exports=require("body-parser")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,